name: Build and Release

on:
  push:
    tags:
      - 'v*'

jobs:
  build-macos:
    runs-on: macos-latest
    outputs:
      dmg-name: ${{ steps.upload.outputs.artifact-name }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment
        run: uv venv .venv

      - name: Install deps & build app
        run: |
          source .venv/bin/activate
          uv sync
          pyinstaller app.py \
            --name=MyTool \
            --windowed \
            --icon=favo.icns \
            --add-data "favo.png:." \
            --add-data ".env:." \
            --add-data "data:data"

      - name: Sign and prepare app for dmg
        run: |
          APP_PATH="dist/MyTool.app"
          xattr -cr "$APP_PATH"
          codesign --deep --force --sign - "$APP_PATH"

      - name: Build .dmg with Applications symlink
        run: |
          APP_NAME="MyTool"
          APP_PATH="dist/${APP_NAME}.app"
          DMG_NAME="${APP_NAME}.dmg"
          STAGE="dmg-root"

          rm -rf "$STAGE" "$DMG_NAME"
          mkdir -p "$STAGE"
          cp -R "$APP_PATH" "$STAGE/"
          ln -s /Applications "$STAGE/Applications"

          hdiutil create "dist/$DMG_NAME" \
            -volname "${APP_NAME} Installer" \
            -srcfolder "$STAGE" \
            -fs HFS+ \
            -format UDZO

      - name: Upload mac artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyTool-mac
          path: dist/MyTool.dmg
        id: upload

  build-windows:
    runs-on: windows-latest

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.13'

      - name: Install uv
        run: pip install uv

      - name: Create virtual environment
        run: uv venv .venv

      - name: Install deps & build app
        shell: pwsh
        run: |
          .\.venv\Scripts\Activate.ps1
          uv sync
          pyinstaller app.py `
            --name=MyTool `
            --windowed `
            --add-data "favo.png;." `
            --add-data ".env;." `
            --add-data "data;data"

      - name: Upload windows artifact
        uses: actions/upload-artifact@v4
        with:
          name: MyTool-win
          path: dist/MyTool/MyTool.exe

  release:
    runs-on: ubuntu-latest
    needs: [build-macos, build-windows]

    steps:
      - name: Download mac artifact
        uses: actions/download-artifact@v4
        with:
          name: MyTool-mac
          path: release-assets

      - name: Download win artifact
        uses: actions/download-artifact@v4
        with:
          name: MyTool-win
          path: release-assets

      - name: Upload release files
        uses: softprops/action-gh-release@v1
        with:
          files: |
            release-assets/MyTool.dmg
            release-assets/MyTool.exe
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}